{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": ["type"],
  "properties": {
    "type": {
      "type": "string",
      "enum": ["run_graph", "compile_brief", "run_auv"]
    },
    "graph_file": {
      "type": "string",
      "description": "Path to graph file for run_graph jobs"
    },
    "brief": {
      "type": "string",
      "description": "Path to brief file for compile_brief jobs"
    },
    "auv_id": {
      "type": "string",
      "description": "AUV identifier for run_auv jobs"
    },
    "tenant": {
      "type": "string",
      "description": "Tenant identifier for multi-tenant isolation"
    },
    "run_id": {
      "type": "string",
      "description": "Unique run identifier"
    },
    "resume": {
      "type": "boolean",
      "description": "Whether to resume from previous state"
    },
    "concurrency": {
      "type": "integer",
      "minimum": 1,
      "maximum": 10,
      "description": "Number of concurrent workers"
    },
    "env": {
      "type": "object",
      "description": "Environment variables to pass to the job",
      "additionalProperties": { "type": "string" }
    },
    "enqueued_at": {
      "type": "string",
      "format": "date-time",
      "description": "ISO timestamp when job was enqueued"
    },
    "priority": {
      "type": "integer",
      "minimum": 0,
      "maximum": 100,
      "description": "Job priority (higher = more urgent)"
    },
    "metadata": {
      "type": "object",
      "additionalProperties": true,
      "description": "Additional metadata for the job"
    },
    "callbacks": {
      "type": "object",
      "properties": {
        "on_start": { "type": "string" },
        "on_complete": { "type": "string" },
        "on_error": { "type": "string" }
      },
      "description": "Webhook callbacks for job events"
    },
    "params": {
      "type": "object",
      "description": "Legacy params field for backward compatibility",
      "additionalProperties": true
    }
  },
  "additionalProperties": false
}
