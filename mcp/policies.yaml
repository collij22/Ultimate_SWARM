# Swarm1 MCP Policies
# Place at: /mcp/policies.yaml
version: 1

# Router configuration defaults
router:
  defaults:
    prefer_tier: primary
    budget_usd: 0.25
    require_secondary_consent: true
  on_missing_primary:
    action: propose_secondary_with_budget
    default_budget_usd: 0.10

# Primary vs Secondary tool policy
tiers:
  primary:
    require_consent: false
  secondary:
    require_consent: true
    default_budget_usd: 0.10
    budget_overrides:
      vercel: 0.10
      k6: 0.50
      datadog: 0.20
      sbom: 0.15
      license-checker: 0.10
      firecrawl: 0.10
      stripe: 0.10
      supabase: 0.10
      tts-cloud: 0.10

# Global environment safety
safety:
  allow_production_mutations: false
  require_test_mode_for:
    - payments
    - web.search
    - web.crawl
    - cloud.db
    - audio.tts.cloud
    - email
  redact_logs:
    - api_keys
    - access_tokens
    - passwords

# CVF thresholds for domain validation
cvf:
  thresholds:
    data:
      min_rows: 10
      min_metrics: 1
    charts:
      min_width: 400
      min_height: 300
      max_width: 2000
      max_height: 2000
    seo:
      max_broken_links: 5
      min_canonical_rate: 0.8
      max_load_time_ms: 3000
    media:
      duration_tolerance_pct: 10
      min_width: 640
      min_height: 480
      required_audio_track: true
    db:
      max_failed_migrations: 0
      validation_required: true

# Capability â†’ tool mappings used by the Tool Router
capability_map:
  browser.automation: [playwright]
  screenshot: [playwright]
  api.test: [http]
  db.query: [postgres]
  docs.search: [ref, refdocs]
  docs.read: [ref]
  security.scan: [semgrep]
  security.secrets: [gitleaks]
  security.iac: [checkov]
  security.container: [trivy]
  visual.regression: [visual-compare]
  web.perf_audit: [lighthouse]
  perf.web: [lighthouse, bundle-analyzer]
  perf.api: [latency-sampler]
  perf.db: [explain]
  trace.profile: [traces]
  packaging.bundle: [zip, checksum]
  packaging.sbom: [sbom, license-checker]
  container.build: [docker-buildx]
  deploy.k8s: [kubectl, helm]
  deploy.preview: [vercel]
  header.csp: [fetch]
  web.fetch: [fetch]
  web.search: [brave-search]
  dep.graph: [depgraph]
  code.codemod: [jscodeshift, ts-morph]
  typecheck: [tsc]
  lint: [eslint]
  perf.load: [k6]
  monitoring.saas: [datadog]

  # New capabilities (Primary-first; Secondary as fallback where applicable)
  data.ingest: [duckdb]
  data.query: [duckdb]
  data.insights: [insights]
  chart.render: [chart-renderer]
  audio.tts: [tts-piper]
  video.compose: [ffmpeg]
  seo.audit: [seo-auditor]
  web.crawl: [crawler-lite, firecrawl]
  doc.generate: [report-lite]
  doc.convert: [pandoc]
  image.process: [imagemagick]
  nlp.translate: [argos-translate]
  payments.test: [stripe]
  cloud.db: [supabase]
  audio.tts.cloud: [tts-cloud]

# Agent-level allowlists (used by router for filtering)
agents:
  allowlist:
    A1.orchestrator: [playwright, lighthouse, http, semgrep, gitleaks, ref, brave-search, fetch]
    A2.requirements_analyst:
      [refdocs, ref, brave-search, fetch, stripe, supabase, firecrawl, tts-cloud, crawler-lite]
    A3.capability_validator: [playwright, lighthouse, http]
    A4.user_robot: [playwright, http]
    A5.finalizer_integrator: [zip, checksum]
    B6.project_architect: [depgraph, tsc, eslint]
    B7.rapid_builder:
      [
        playwright,
        lighthouse,
        http,
        tsc,
        eslint,
        duckdb,
        insights,
        chart-renderer,
        report-lite,
        imagemagick,
        pandoc,
        argos-translate,
        crawler-lite,
        firecrawl,
        tts-piper,
        ffmpeg,
        ref,
        brave-search,
        fetch,
      ]
    B8.frontend_specialist:
      [playwright, lighthouse, bundle-analyzer, visual-compare, chart-renderer, imagemagick]
    B9.backend_api_integrator: [http, postgres, latency-sampler, explain, duckdb, supabase]
    B10.database_expert: [postgres, explain, duckdb]
    B11.ai_ml_specialist: [http, traces]
    B12.documentation_writer: [refdocs, ref, fetch]
    C13.quality_guardian:
      [
        playwright,
        lighthouse,
        http,
        visual-compare,
        seo-auditor,
        crawler-lite,
        report-lite,
        fetch,
        firecrawl,
      ]
    C14.debugger: [traces, explain, depgraph]
    C15.security_auditor: [semgrep, gitleaks, checkov, trivy]
    C16.devops_engineer:
      [kubectl, helm, docker-buildx, vercel, firecrawl, stripe, supabase, tts-cloud]

  budgets:
    A1.orchestrator:
      total_usd: 1.00
      per_capability_usd:
        browser.automation: 0.25
        web.perf_audit: 0.25
    A2.requirements_analyst:
      total_usd: 0.50
      per_capability_usd:
        docs.search: 0.05
        docs.read: 0.05
        web.search: 0.05
        web.fetch: 0.02
    B7.rapid_builder:
      total_usd: 1.50
      per_capability_usd:
        code.codemod: 0.50
        lint: 0.25
        typecheck: 0.25
        data.ingest: 0.05
        data.query: 0.05
        data.insights: 0.05
        chart.render: 0.05
        doc.generate: 0.05
        web.crawl: 0.05
        audio.tts: 0.05
        video.compose: 0.05
    C13.quality_guardian:
      total_usd: 0.75
      per_capability_usd:
        seo.audit: 0.05
        web.crawl: 0.05
        visual.regression: 0.05
        header.csp: 0.02
        doc.generate: 0.05
    C16.devops_engineer:
      total_usd: 1.00
      per_capability_usd:
        deploy.preview: 0.50

  # Auxiliary agents
  performance-optimizer:
    capabilities: [perf.web, perf.api, perf.db, trace.profile]
    allowlist:
      primary: [lighthouse, bundle-analyzer, latency-sampler, explain, traces]
      secondary: [k6]
    notes: 'Run baselines first; verify deltas with identical scripts/env.'

  code-migrator:
    capabilities: [dep.graph, code.codemod, typecheck, lint]
    allowlist:
      primary: [depgraph, jscodeshift, ts-morph, tsc, eslint]
      secondary: []
    serialized_files: ['package.json', 'pnpm-lock.yaml', 'yarn.lock', 'migrations/**']
    notes: 'Use codemods with reports; phase changes; respect serialize_globs.'

  # Subagent capability guidance (Phase 10b-4; informational)
  claude:
    capabilities:
      [
        docs.search,
        docs.read,
        web.search,
        web.fetch,
        seo.audit,
        web.crawl,
        doc.generate,
        chart.render,
      ]

# Header/CSP check defaults
headers_csp:
  require_https: true
  require_hsts: true
  require_csp: true

# Performance thresholds (defaults)
performance:
  web:
    lcp_ms: 2500
    tti_ms: 3000
    cls: 0.10
    transfer_kb: 250
  api:
    p95_ms: 200
  db:
    query_ms: 50

# Tenant-specific configurations (Phase 8)
tenants:
  # Default tenant (backward compatibility)
  default:
    budget_ceiling_usd: 100
    allowed_capabilities:
      - browser.automation
      - api.test
      - data.validation
      - docs.search
      - docs.read
      - code.analysis
      - perf.web
      - security.scan
      - data.ingest
      - data.query
      - data.insights
      - chart.render
      - seo.audit
      - web.crawl
      - web.search
      - web.fetch
      - doc.generate
      - doc.convert
      - image.process
      - nlp.translate
      - audio.tts
      - video.compose
    max_concurrent_jobs: 3
    max_job_runtime_ms: 300000 # 5 minutes
    allow_secondary_tools: false
    resource_limits:
      max_artifacts_size_mb: 100
      max_auv_count: 50
      max_graph_nodes: 100

  # Example tenant with enhanced capabilities
  acme-corp:
    budget_ceiling_usd: 500
    allowed_capabilities:
      - browser.automation
      - api.test
      - data.validation
      - docs.search
      - code.analysis
      - perf.web
      - security.scan
      - deploy.preview # Premium capability
      - database.staging
    max_concurrent_jobs: 5
    max_job_runtime_ms: 600000 # 10 minutes
    allow_secondary_tools: true
    resource_limits:
      max_artifacts_size_mb: 500
      max_auv_count: 100
      max_graph_nodes: 200
    router_overrides:
      prefer_tier: primary
      budget_override: 200 # Per-job budget override
      tool_allowlist:
        - playwright
        - lighthouse
        - http
        - postgres
        - vercel
      tool_blocklist:
        - kubectl # Block production k8s access

  # Example limited tenant
  beta-inc:
    budget_ceiling_usd: 50
    allowed_capabilities:
      - browser.automation
      - api.test
      - docs.search
    max_concurrent_jobs: 1
    max_job_runtime_ms: 180000 # 3 minutes
    allow_secondary_tools: false
    resource_limits:
      max_artifacts_size_mb: 50
      max_auv_count: 10
      max_graph_nodes: 50
    router_overrides:
      prefer_tier: primary
      tool_blocklist:
        - semgrep # No security scans for this tenant
        - gitleaks
        - postgres # No database access
